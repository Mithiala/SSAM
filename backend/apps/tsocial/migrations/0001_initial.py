# Generated by Django 4.2.7 on 2023-11-21 22:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('centro', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComposicionFamiliar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Eliminación')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre')),
                ('edad', models.PositiveSmallIntegerField(verbose_name='edad')),
                ('telefono', models.PositiveIntegerField(verbose_name='telefono')),
                ('direc_part', models.CharField(max_length=50, verbose_name='direc_part')),
                ('parentesco', models.CharField(max_length=50, verbose_name='parentesco')),
                ('estado_civil', models.CharField(max_length=50, verbose_name='estado_civil')),
                ('escolaridad', models.CharField(max_length=50, verbose_name='escolaridad')),
                ('ocupacion', models.CharField(max_length=50, verbose_name='ocupacion')),
                ('ingreso_economico', models.CharField(max_length=50, verbose_name='ingreso_economico')),
            ],
            options={
                'verbose_name': 'Composición Familiar',
                'verbose_name_plural': 'Composiciones Familiares',
                'db_table': 'composicionfamiliar',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Eliminación')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Imagen')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre')),
                ('edad', models.PositiveSmallIntegerField(verbose_name='Edad')),
                ('sexo', models.CharField(max_length=10, verbose_name='Sexo')),
                ('direccion_part', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('ci', models.PositiveBigIntegerField(verbose_name='Carnet ID')),
                ('natural_de', models.CharField(max_length=50, verbose_name='Natural de:')),
                ('estado_civil', models.CharField(max_length=50, verbose_name='Estado Civil')),
                ('ocupacion', models.CharField(max_length=50, verbose_name='Ocupación')),
                ('creencias_religiosas', models.CharField(max_length=50, verbose_name='Creencias Religiosas')),
                ('escolaridad', models.CharField(max_length=50, verbose_name='Escolaridad')),
                ('hijo_de', models.CharField(max_length=50, verbose_name='Hijo de:')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha Nacimiento')),
                ('num_hc', models.PositiveIntegerField(blank=True, null=True, verbose_name='# Historia Clínica')),
                ('num_hs', models.PositiveIntegerField(blank=True, null=True, verbose_name='# Historia Social')),
                ('num_cmf', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='# CMF')),
                ('fecha_inscripcion', models.DateField(blank=True, null=True, verbose_name='Fecha Inscripcion')),
                ('antecedentes', models.TextField(blank=True, null=True, verbose_name='Antecedentes')),
                ('recibevisita', models.BooleanField(default=False, verbose_name='Recibe Visita')),
                ('clasificacion_economica', models.CharField(max_length=50, verbose_name='Clasificación Económica')),
                ('num_chequera', models.PositiveBigIntegerField(verbose_name='# Chequera')),
                ('vivienda', models.CharField(max_length=50, verbose_name='Vivienda')),
                ('situacion_vivienda', models.CharField(max_length=50, verbose_name='Situacion Vivienda')),
                ('convivencia', models.CharField(max_length=50, verbose_name='Convivencia')),
                ('tiempo_estadia', models.CharField(max_length=50, verbose_name='Tiempo Estadia')),
                ('reportado_por', models.CharField(max_length=50, verbose_name='Reportado por:')),
                ('motivo_reporte', models.CharField(max_length=50, verbose_name='Motivo Reporte:')),
                ('problema_social', models.CharField(max_length=50, verbose_name='Problema Social')),
                ('p_centros', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pacientecentro', to='centro.centro', verbose_name='Centros')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'db_table': 'pacientes',
            },
        ),
        migrations.CreateModel(
            name='TrabajoDiario',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Eliminación')),
                ('fecha_ent', models.DateField(blank=True, null=True, verbose_name='Fecha entrevista')),
                ('lugar_entrevista', models.CharField(max_length=50, verbose_name='Lugar de entrevista')),
                ('tarjeton_medicamento', models.CharField(verbose_name='Tarjetón de medicamento')),
                ('recibidos', models.BooleanField(default=False, verbose_name='Recibidos')),
                ('enviados', models.BooleanField(default=False, verbose_name='Enviados')),
                ('observaciones', models.TextField(verbose_name='Observaciones')),
                ('mot_invest', models.TextField(verbose_name='Motivo de la investigación')),
                ('efectuada', models.BooleanField(default=False, verbose_name='Efectuada')),
                ('conclusiones', models.TextField(verbose_name='Conclusiones')),
                ('td_familiar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='td_familiar', to='tsocial.composicionfamiliar', verbose_name='Familiar')),
                ('td_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='td_paciente', to='tsocial.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Trabajo Diario',
                'verbose_name_plural': 'Trabajos Diarios',
                'db_table': 'trabajodiario',
            },
        ),
        migrations.CreateModel(
            name='EncuestaInicial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Eliminación')),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='Fecha')),
                ('tv', models.BooleanField(default=False, verbose_name='tv')),
                ('juegomesa', models.BooleanField(default=False, verbose_name='juegomesa')),
                ('cine', models.BooleanField(default=False, verbose_name='cine')),
                ('radio', models.BooleanField(default=False, verbose_name='radio')),
                ('pelota', models.BooleanField(default=False, verbose_name='pelota')),
                ('otras', models.BooleanField(default=False, verbose_name='otras')),
                ('lectura', models.BooleanField(default=False, verbose_name='Lectura')),
                ('procedencia_at_asist_social', models.CharField(max_length=50, verbose_name='procedencia_at_asist_social')),
                ('grado_parentesco', models.CharField(max_length=50, verbose_name='grado_parentesco')),
                ('direc_person_responsable', models.CharField(max_length=50, verbose_name='direc_person_responsable')),
                ('persona_cobra_chequera', models.CharField(blank=True, max_length=50, null=True, verbose_name='persona_cobra_chequera')),
                ('ingresado', models.BooleanField(default=False, verbose_name='ingresado')),
                ('motivo', models.TextField(verbose_name='Motivo')),
                ('antes_donde_residia', models.CharField(max_length=50, verbose_name='antes_donde_residia')),
                ('jefenucleo', models.BooleanField(default=False, verbose_name='jefenucleo')),
                ('impfisico', models.BooleanField(default=False, verbose_name='impfisico')),
                ('protesis', models.BooleanField(default=False, verbose_name='protesis')),
                ('calsadoortop', models.BooleanField(default=False, verbose_name='calsadoortop')),
                ('espejuelos', models.BooleanField(default=False, verbose_name='espejuelos')),
                ('visitafamiliares', models.BooleanField(default=False, verbose_name='visitafamiliares')),
                ('visitaamistades', models.BooleanField(default=False, verbose_name='visitaamistades')),
                ('avisarleingreso', models.BooleanField(default=False, verbose_name='avisarleingreso')),
                ('antecedentes_patologicos', models.TextField(verbose_name='antecedentes_patologicos')),
                ('enc_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enc_paciente', to='tsocial.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Encuesta Inicial',
                'verbose_name_plural': 'Encuestas Iniciales',
                'db_table': 'encuestainicial',
            },
        ),
        migrations.CreateModel(
            name='Discapacidad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Eliminación')),
                ('motora', models.BooleanField(default=False, verbose_name='Motora')),
                ('auditiva', models.BooleanField(default=False, verbose_name='Auditiva')),
                ('visual', models.BooleanField(default=False, verbose_name='Visual')),
                ('intelectual', models.BooleanField(default=False, verbose_name='Intelectual')),
                ('sensorial', models.BooleanField(default=False, verbose_name='Sensorial')),
                ('mixta', models.BooleanField(default=False, verbose_name='Mixta')),
                ('psicopatia', models.BooleanField(default=False, verbose_name='Psicopatia')),
                ('inconturinaria', models.BooleanField(default=False, verbose_name='Incontinencia urinaria')),
                ('incontfecal', models.BooleanField(default=False, verbose_name='Incontinencia fecal')),
                ('incontmixta', models.BooleanField(default=False, verbose_name='Incontinencia mixta')),
                ('disc_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disc_paciente', to='tsocial.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Discapacidad',
                'verbose_name_plural': 'Discapacidades',
                'db_table': 'discapacidad',
            },
        ),
        migrations.CreateModel(
            name='ControlPase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Eliminación')),
                ('fecha_salida', models.DateField(blank=True, null=True, verbose_name='Fecha salida')),
                ('direc_part', models.CharField(verbose_name='Dirección')),
                ('fecha_regreso', models.DateField(blank=True, null=True, verbose_name='Fecha regreso')),
                ('cp_familiar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cp_familiar', to='tsocial.composicionfamiliar', verbose_name='Familiar')),
                ('cp_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cp_paciente', to='tsocial.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Control Pase',
                'verbose_name_plural': 'Controles Pases',
                'db_table': 'controlpase',
            },
        ),
        migrations.AddField(
            model_name='composicionfamiliar',
            name='cf_paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cf_paciente', to='tsocial.paciente', verbose_name='Paciente'),
        ),
        migrations.CreateModel(
            name='AyudaTecnica',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de Eliminación')),
                ('protesisdental', models.BooleanField(default=False, verbose_name='Prótesis dental')),
                ('protesisauditiva', models.BooleanField(default=False, verbose_name='Prótesis auditiva')),
                ('anteojos', models.BooleanField(default=False, verbose_name='Anteojos')),
                ('protesisortopedica', models.BooleanField(default=False, verbose_name='Prótesis Ortopédica')),
                ('sillaruedas', models.BooleanField(default=False, verbose_name='Silla de ruedas')),
                ('baston', models.BooleanField(default=False, verbose_name='Bastón')),
                ('andador', models.BooleanField(default=False, verbose_name='Andador')),
                ('colchon', models.BooleanField(default=False, verbose_name='Colchón')),
                ('camaplana', models.BooleanField(default=False, verbose_name='Cama plana')),
                ('camafowler', models.BooleanField(default=False, verbose_name='Cama fowler')),
                ('at_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='at_paciente', to='tsocial.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Ayuda Técnica',
                'verbose_name_plural': 'Ayudas Técnicas',
                'db_table': 'ayudatecnica',
            },
        ),
    ]
